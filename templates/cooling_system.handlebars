<head>
    <script src="https://cdn.anychart.com/releases/v8/js/anychart-base.min.js"></script>
    <script src="https://cdn.anychart.com/releases/v8/js/anychart-ui.min.js"></script>
    <script src="https://cdn.anychart.com/releases/v8/js/anychart-exports.min.js"></script>
    <script src="https://cdn.anychart.com/releases/v8/js/anychart-linear-gauge.min.js"></script>
    <script src="https://cdn.anychart.com/releases/v8/js/anychart-table.min.js"></script>
    <link href="https://cdn.anychart.com/releases/v8/css/anychart-ui.min.css" type="text/css" rel="stylesheet">
    <link href="https://cdn.anychart.com/releases/v8/fonts/css/anychart-font.min.css" type="text/css" rel="stylesheet">
    {{!-- <link href="https://unpkg.com/@coreui/coreui@4.2.4/dist/css/coreui.min.css" rel="stylesheet" /> --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/handlebars.min.js"></script>
      <style>
    /* Style for toggle switch */
    .switch {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 34px;
    }

    .li {
        color: var(--cui-nav-link-color);
    }

    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: .4s;
      border-radius: 34px;
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }

    input:checked + .slider {
      background-color: #2196F3;
    }

    input:checked + .slider:before {
      transform: translateX(26px);
    }

    /* Additional Styles */
    body {
      background-color: #f8f9fa;
    }

    .card {
      border: none;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .card-header {
      background-color: #007bff;
      color: white;
      font-weight: bold;
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
      padding: 15px;
    }

    table {
      margin: 0;
      border-collapse: collapse;
    }

    th, td {
      padding: 12px;
      text-align: left;
      vertical-align: middle;
    }

    th {
      background-color: #e9ecef;
      color: #333;
      position: relative;
      z-index: 1;
    }

    {{!-- tr:hover {
      background-color: #f1f1f1; /* Hover effect only for table rows, not headers */
    } --}}

    .btn {
      margin: 5px 0;
    }

    .btn-warning {
      background-color: #ffc107;
      border: none;
    }

    .btn-danger {
      background-color: #dc3545;
      border: none;
    }

    .btn-warning:hover {
      background-color: #e0a800;
    }

    .btn-danger:hover {
      background-color: #c82333;
    }
  </style>
</head>

<body>
    <div class="container mt-5">
    <div class="row">
      <div class="col-md-8 offset-md-2">
        <div class="card">
          <div class="card-header">
            <h3>Sensors Control</h3>
          </div>
          <div class="card-body">
            <table class="table table-hover" id="sensorsTable">
              <thead>
                <tr>
                  <th></th>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Status</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="sensorsBody">
                {{#each sensors}}
                  <tr>
                    <td>
                      <img src="https://w7.pngwing.com/pngs/688/48/png-transparent-electricity-meter-computer-icons-others-text-rectangle-electrical-wires-cable.png" alt="{{this.name}} icon" style="width: 100px; height: 50px;">
                    </td>
                    <td>{{this.id}}</td>
                    <td><a href="/admin/view-statistics/{{this.id}}" style="color: #007bff;">{{this.name}}</a></td>
                    <td>{{this.status}}</td>
                    <td>
                      <label class="switch">
                        <input type="checkbox" {{#if this.status}}checked{{/if}} data-sensor-id="{{this.id}}">
                        <span class="slider"></span>
                      </label>
                    </td>
                    <td>
                      <form action="/admin/delete-sensor" method="post">
                        <input type="hidden" name="token" value="{{../csrfToken}}">
                        <a class="btn btn-warning btn-sm" href="/admin/edit-sensor?sensor={{this.id}}">Edit Sensor</a>
                        <input type="hidden" name="sensorId" value="{{this.id}}">
                        <input type="submit" class="btn btn-danger btn-sm" tabindex="-1" role="button" value="Remove Sensor">
                      </form>
                    </td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Function to load sensors from the backend server
    function loadSensors() {
      fetch('http://localhost:5000/sensors')
        .then(function(response) {
          return response.json();
        })
        .then(function(data) {
          // Get the CSRF token if needed
          const csrfToken = 'your_csrf_token_here'; // Replace with actual CSRF token

          // Create a context for Handlebars
          const context = {
            sensors: data,
            csrfToken: csrfToken
          };

          // Render the Handlebars template
          const templateSource = document.getElementById('sensors-template').innerHTML;
          const template = Handlebars.compile(templateSource);
          const html = template(context);
          
          // Insert the rendered HTML into the table body
          document.getElementById('sensorsBody').innerHTML = html;

          // Attach event listeners to toggle switches
          document.querySelectorAll('input[type="checkbox"]').forEach(function(toggle) {
            toggle.addEventListener('change', function() {
              const sensorId = this.getAttribute('data-sensor-id');
              const newStatus = this.checked ? "on" : "off";
              // Update the sensor status on the server
              updateSensorStatus(sensorId, newStatus);
            });
          });
        })
        .catch(function(error) {
          console.error('Error fetching sensors:', error);
        });
    }

    // Function to update sensor status
    function updateSensorStatus(sensorId, newStatus) {
      fetch(`http://localhost:5000/update-sensor-status`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': 'your_csrf_token_here' // Replace with actual CSRF token
        },
        body: JSON.stringify({ sensorId: sensorId, status: newStatus })
      })
      .then(response => response.json())
      .then(data => {
        console.log('Sensor status updated:', data);
      })
      .catch(error => {
        console.error('Error updating sensor status:', error);
      });
    }

    // Load sensors when the page is ready
    window.onload = loadSensors;
  </script>

  <!-- Handlebars template for rendering sensors -->
  <script id="sensors-template" type="text/x-handlebars-template">
    {{#each sensors}}
      <tr>
        <td><i class="{{this.icon}}"></i></td>
        <td>{{this.id}}</td>
        <td><a href="/admin/view-statistics/{{this.id}}">{{this.name}}</a></td>
        <td>
          <label class="switch">
            <input type="checkbox" {{#if this.status}}checked{{/if}} data-sensor-id="{{this.id}}">
            <span class="slider"></span>
          </label>
        </td>
        <td>
          <form action="/admin/delete-sensor" method="post">
            <input type="hidden" name="token" value="{{../csrfToken}}">
            <a class="btn btn-warning btn-sm" href="/admin/edit-sensor?sensor={{this.id}}">Edit Sensor</a>
            <input type="hidden" name="sensorId" value="{{this.id}}">
            <input type="submit" class="btn btn-danger btn-sm" tabindex="-1" role="button" value="Remove Sensor">
          </form>
        </td>
      </tr>
    {{/each}}
  </script>
</body>